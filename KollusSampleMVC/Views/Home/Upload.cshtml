@{
    ViewData["Title"] = "Upload";
}
<h1>@ViewData["Title"]</h1>

<div class="container-sm">
    <form action="" method="post" enctype="multipart/form-data" name="form-kollus-upload" id="form-kollus-upload" target='blankifr'>
        <input type="hidden" name="disable_alert" value="1" />
        <input type="hidden" name="redirection_scope" value="no" />
        <input type="hidden" name="return_url" id="return_url" value="" />

        <div class="mb-3">
            <input type="text" class="form-control" id="title" placeholder="Title">
        </div>
        <div class="mb-3">
            <input type="file" class="form-control" id="upload-file" name="upload-file" placeholder="Upload File" multiple accept="audio/*,video/*">
        </div>
        <button type="button" class="btn btn-info" onclick="upload()">Submit</button>
    </form>
    <iframe name='blankifr' style='display:none;'></iframe>

    <div class="progress" style="visibility: hidden;" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">
        <div class="progress-bar" style="width: 0%"></div>
    </div>
</div>

<script>
    const accessToken = ''; // YOUR_ACCESS_TOKEN
    const categoryKey = ''; // YOUR CATEGORY KEY 
    const isEncryption = '0';

    async function onCreateUrl() {
        const options = {
            method: 'POST',
            headers: {
                accept: 'application/json',
                'content-type': 'application/x-www-form-urlencoded'
            },
            body: new URLSearchParams({ category_key: categoryKey, is_encryption_upload: isEncryption })
        };

        const response = await fetch('https://api.kr.kollus.com/0/media_auth/upload/create_url?access_token=' + accessToken, options)
        return response.json();
    }
    function upload() {
        let form = document.getElementById("form-kollus-upload");
        let uploadFileInput = form.querySelector('input[type=file][name=upload-file]');

        if (uploadFileInput.files.length === 0) {
            alert("There's no file");
            return false;
        }

        onCreateUrl().then((data) => {
            if (data.error === 0) {
                let uploadUrl = data.result.upload_url;
                let progressUrl = data.result.progress_url;
                let uploadFileKey = data.result.upload_file_key;

                // document.getElementById("return_url").value = '';
                form.action = uploadUrl;
                form.submit();

                addNewUploadFileKey(uploadFileKey);

                let progressing;
                progressing = setInterval(function () {
                    fetch(progressUrl)
                        .then((response) => response.json())
                        .then((data) => {
                            if (data.error === 0) {
                                let progress = document.getElementsByClassName('progress')[0];
                                let progressBar = document.getElementsByClassName('progress-bar')[0];
                                progress.style.visibility = 'visible';
                                progress.ariaValueNow = data.result.progress;
                                progressBar.style.width = data.result.progress + '%';

                                if (data.result.progress === 100) {
                                    clearInterval(progressing);
                                }
                            }
                        }).catch((e) => {
                            clearInterval(progressing);
                        })
                }, 1000);
            }
        });
    }
    function addNewUploadFileKey(uploadFileKey) {
        fetch('https://localhost:7094/api/add-content', {
            method: 'POST',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ UploadFileKey: uploadFileKey })
        });
    }
</script>
